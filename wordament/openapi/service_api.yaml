swagger: "2.0"
info:
  description: A Restful interface for the wordament_solver
  version: "1.0.0"
  title: Wordament solver

consumes:
  - "application/json"
produces:
  - "application/json"
#schemes: [http, https]

basePath: "/api"

paths:
  /health:
    get:
      tags: [health]
      operationId: health.health
      summary: Health Check
      responses:
        '200':
          description: Status message for current health

  /ready:
    get:
      tags: [readiness]
      operationId: dictionary.loaded
      summary: Readiness Check
      responses:
        '200':
          description: Status message for if default dictionary is loaded

  /dictionary/{dictionary_id}:
    get:
      operationId: dictionary.get
      summary: "Get a named dictionary"
      description: "Get a named dictionary."
      consumes:
        - application/json
      parameters:
        - $ref: '#/parameters/dictionary_id'        
      responses:
        '200':
          description: 'Dictionary found'
          schema: 
            properties:
              id:
                type: string
                description: Unique identifier
              number_of_words:
                type: integer
                description: Number of words
              max_word_length:
                type: integer
                description: Longest word length

          # content:
          #   application/json:
          #     schema:
          #       $ref: '#/components/schemas/Dictionary'

        '404':
          description: '#/parameters/dictionary_id does not exist'

    post:
      operationId: dictionary.create
      summary: "Create a named dictionary"
      description: "Create a named dictionary.  The payload can contain an initial set of words for the dictionary"
      consumes:
        - application/json
      parameters:
        - $ref: '#/parameters/dictionary_id'        
        - in: body
          name: words
          description: The words that will be passed into the dictionary.
          schema:
            type: "array"
            items:
              properties:
                number:
                  type: "string"
      responses:
        '201':
          description: 'Created #/parameters/dictionary_id'
        '409':
          description: '#/parameters/dictionary_id already exists'

    put:
      operationId: dictionary.add_words
      summary: "Adds words to an existing dictionary"
      description: "Adds words to an existing dictionary"
      consumes:
        - application/json
      parameters:
        - $ref: '#/parameters/dictionary_id'        
        - in: body
          name: words
          description: The words that will be passed into the dictionary.
          schema:
            type: "array"
            items:
              properties:
                number:
                  type: "string"
      responses:
        '200':
          description: 'Successfully added words to dictionary'
        '404':
          description: '#/parameters/dictionary_id not found'

  /dictionary/{dictionary_id}/{word}:
    get:
      operationId: dictionary.get_word
      summary: "Check if word exists in dictionary or not"
      description: "Check if word exists in dictionary or not"
      parameters:
        #- $ref: '#/parameters/dictionary_id'        
        - name: dictionary_id
          description: Dictionary unique id
          in: path
          type: string
          required: true
          pattern: "^[a-zA-Z0-9-]*$"  
        - name: word
          description: Word to test in dictionary
          in: path
          type: string
          required: true
          pattern: "^[a-zA-Z0-9-]*$"                

      responses:
        200:
          description: 'Word found'
        404:
          description: 'Word does not exist'

  #   post:
  #     operationId: dictionary.add_word
  #     summary: "Add word to dictionary"
  #     description: "Add word to dictionary"
  #     consumes:
  #       - application/json
  #     parameters:
  #       - $ref: '#/parameters/dictionary_id'    
  #       - $ref: '#/parameters/word'               
  #     responses:
  #       '201':
  #         description: 'Word added'
  #       '404':
  #         description: 'Dictionary not found'


        
  /puzzle:
    get:
      tags: [Wordament]
      operationId: puzzle.read
      summary: "Get the words found in the puzzle"
      description: "Get all the words found"
      responses:
        '200':
          description: "Successful read numbers operation"
          schema:
            type: "array"
            items:
              properties:
                number:
                  type: "string"


parameters:
  dictionary_id:
    name: dictionary_id
    description: Dictionary unique id
    in: path
    type: string
    required: true
    pattern: "^[a-zA-Z0-9-]*$"

# parameters:
#   word:
#     name: word
#     description: "A word to be added to the dictionary"
#     in: path
#     type: string
#     pattern: "^[a-zA-Z0-9-]*$"

# components:
#   schemas:
#     Dictionary:
#       type: object
#       properties:
#         id:
#           type: string
#           description: Unique identifier
#         number_of_words:
#           type: integer
#           description: Number of words
#         max_word_length:
#           type: integer
#           description: Longest word length

    #definitions:
    #  dictionaryParam:
